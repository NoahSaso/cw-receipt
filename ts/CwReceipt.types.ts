/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.17.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  output: string;
  owner?: string | null;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  pay: {
    id: string;
  };
} | {
  update_output: {
    output: string;
  };
} | {
  update_ownership: Action;
};
export type Uint128 = string;
export type Binary = string;
export type Action = {
  transfer_ownership: {
    expiry?: Expiration | null;
    new_owner: string;
  };
} | "accept_ownership" | "renounce_ownership";
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  output: {};
} | {
  list_payments_to_id: {
    id: string;
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  list_totals_paid_to_id: {
    id: string;
    limit?: number | null;
    start_after?: CheckedDenom | null;
  };
} | {
  list_ids_for_payer: {
    limit?: number | null;
    payer: string;
    start_after?: string | null;
  };
} | {
  list_totals_paid_by_payer: {
    limit?: number | null;
    payer: string;
    start_after?: CheckedDenom | null;
  };
} | {
  ownership: {};
};
export type CheckedDenom = {
  native: string;
} | {
  cw20: Addr;
};
export type Addr = string;
export interface ListIdsForPayerResponse {
  ids: string[];
}
export interface ListPaymentsToIdResponse {
  payments: PaymentWithId[];
}
export interface PaymentWithId {
  id: number;
  payment: Payment;
}
export interface Payment {
  amount: Uint128;
  block: BlockInfo;
  denom: CheckedDenom;
}
export interface BlockInfo {
  chain_id: string;
  height: number;
  time: Timestamp;
  [k: string]: unknown;
}
export interface ListTotalsPaidByPayerResponse {
  totals: Total[];
}
export interface Total {
  amount: Uint128;
  denom: CheckedDenom;
}
export interface ListTotalsPaidToIdResponse {
  totals: Total[];
}
export interface OutputResponse {
  output: Addr;
}
export interface OwnershipForString {
  owner?: string | null;
  pending_expiry?: Expiration | null;
  pending_owner?: string | null;
}