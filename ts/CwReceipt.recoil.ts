/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.17.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { selectorFamily } from "recoil";
import { cosmWasmClient } from "./chain";
import { InstantiateMsg, ExecuteMsg, Uint128, Binary, Action, Expiration, Timestamp, Uint64, Cw20ReceiveMsg, QueryMsg, CheckedDenom, Addr, ListIdsForPayerResponse, ListPaymentsToIdResponse, PaymentWithId, Payment, BlockInfo, ListTotalsPaidByPayerResponse, Total, ListTotalsPaidToIdResponse, OutputResponse, OwnershipForString } from "./CwReceipt.types";
import { CwReceiptQueryClient } from "./CwReceipt.client";
type QueryClientParams = {
  contractAddress: string;
};
export const queryClient = selectorFamily<CwReceiptQueryClient, QueryClientParams>({
  key: "cwReceiptQueryClient",
  get: ({
    contractAddress
  }) => ({
    get
  }) => {
    const client = get(cosmWasmClient);
    return new CwReceiptQueryClient(client, contractAddress);
  }
});
export const outputSelector = selectorFamily<OutputResponse, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["output"]>;
}>({
  key: "cwReceiptOutput",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.output(...params);
  }
});
export const listPaymentsToIdSelector = selectorFamily<ListPaymentsToIdResponse, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["listPaymentsToId"]>;
}>({
  key: "cwReceiptListPaymentsToId",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.listPaymentsToId(...params);
  }
});
export const listTotalsPaidToIdSelector = selectorFamily<ListTotalsPaidToIdResponse, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["listTotalsPaidToId"]>;
}>({
  key: "cwReceiptListTotalsPaidToId",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.listTotalsPaidToId(...params);
  }
});
export const listIdsForPayerSelector = selectorFamily<ListIdsForPayerResponse, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["listIdsForPayer"]>;
}>({
  key: "cwReceiptListIdsForPayer",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.listIdsForPayer(...params);
  }
});
export const listTotalsPaidByPayerSelector = selectorFamily<ListTotalsPaidByPayerResponse, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["listTotalsPaidByPayer"]>;
}>({
  key: "cwReceiptListTotalsPaidByPayer",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.listTotalsPaidByPayer(...params);
  }
});
export const ownershipSelector = selectorFamily<OwnershipForString, QueryClientParams & {
  params: Parameters<CwReceiptQueryClient["ownership"]>;
}>({
  key: "cwReceiptOwnership",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.ownership(...params);
  }
});